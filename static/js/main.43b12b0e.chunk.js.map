{"version":3,"sources":["components/FooterComponent.js","redux/ActionCreators.js","redux/urls.js","redux/ActionTypes.js","components/BodyComponent.js","redux/quotesReducer.js","redux/imageReducer.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","id","className","fetchQuotes","dispatch","quotesLoading","fetch","then","response","ok","error","Error","status","statusText","message","json","quotes","addQuotes","catch","quotesFailed","type","payload","quotesErrMess","fetchImage","imageLoading","url","image","addImage","imageFailed","imageErrMess","RenderContent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","newQuote","bind","assertThisInitialized","onClick","twitterUrl","quote","author","tumblrUrl","react_animation_components","in","transformProps","enterTransform","exitTransform","target","href","FooterComponent","Component","Body","_this2","setBackground","state","document","body","style","backgroundImage","_this3","setState","console","log","content","BodyComponent_RenderContent","fetchLoadingTest","changeData","connect","setTimeout","fetchImageLoadingTest","Quotes","arguments","length","undefined","action","objectSpread","Image","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","es","BodyComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43b12b0e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer id=\"footer\">\r\n\t\t\t\t\t\t<ul className=\"copyright\">\r\n\t\t\t\t\t\t\t<li><h2>Christian PÃ¡ez</h2></li>\r\n              <li><h2>Web Developer</h2></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import * as ActionTypes from './ActionTypes';\r\nimport * as urls from './urls';\r\n\r\n//QUOTES FETCH ACTIONS CREATORS\r\n\r\n//LOADING TEST\r\nexport const fetchLoadingTest = () => (dispatch) => {\r\n    dispatch(quotesLoading(true));\r\n    setTimeout(() => {\r\n        dispatch(fetchQuotes());\r\n    }, 5000);\r\n}\r\n//LOADING TEST\r\n\r\nexport const fetchQuotes = () => (dispatch) => {\r\n    dispatch(quotesLoading(true));\r\n    return fetch(urls.quotesUrl)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var quotesErrmess = new Error(error.message);\r\n            throw quotesErrmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(quotes => dispatch(addQuotes(quotes)))\r\n        .catch(error => dispatch(quotesFailed(error.message)));\r\n}\r\n\r\nexport const addQuotes = (quotes) => ({\r\n    type: ActionTypes.ADD_QUOTES,\r\n    payload: quotes\r\n});\r\n\r\nexport const quotesLoading = () => ({\r\n    type: ActionTypes.QUOTES_LOADING\r\n});\r\n\r\nexport const quotesFailed = (quotesErrMess) => {\r\n  return ({\r\n      type: ActionTypes.QUOTES_FAILED,\r\n      payload: quotesErrMess\r\n  });\r\n}\r\n\r\n//QUOTES FETCH ACTIONS CREATORS\r\n\r\n\r\n//IMAGE FETCH ACTIONS CREATORS\r\n\r\n//LOADING TEST\r\nexport const fetchImageLoadingTest = () => (dispatch) => {\r\n    dispatch(imageLoading(true));\r\n    setTimeout(() => {\r\n        dispatch(fetchImage());\r\n    }, 4000);\r\n}\r\n//LOADING TEST\r\n\r\nexport const fetchImage = () => (dispatch) => {\r\n    dispatch(imageLoading(true));\r\n    return fetch(urls.imageUrl)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var ImageErrmess = new Error(error.message);\r\n            throw ImageErrmess;\r\n        })\r\n        .then(response => response.url)\r\n        .then(image => dispatch(addImage(image)))\r\n        .catch(error => dispatch(imageFailed(error.message)));\r\n}\r\n\r\nexport const addImage = (image) => ({\r\n    type: ActionTypes.ADD_IMAGE,\r\n    payload: image\r\n});\r\n\r\nexport const imageLoading = () => ({\r\n    type: ActionTypes.IMAGE_LOADING\r\n});\r\n\r\nexport const imageFailed = (imageErrMess) => {\r\n  return ({\r\n      type: ActionTypes.IMAGE_FAILED,\r\n      payload: imageErrMess\r\n  });\r\n}\r\n\r\n//IMAGE FETCH ACTIONS CREATORS\r\n","export const quotesUrl = 'https://api.quotable.io/random';\r\nexport const imageUrl = 'https://source.unsplash.com/random'\r\n","\r\n// quotes fetching action types\r\nexport const QUOTES_LOADING = 'QUOTES_LOADING';\r\nexport const QUOTES_FAILED = 'QUOTES_FAILED';\r\nexport const ADD_QUOTES = 'ADD_QUOTES';\r\n// quotes fetching action types\r\n\r\n// image fetching action types\r\nexport const IMAGE_LOADING = 'IMAGE_LOADING';\r\nexport const IMAGE_FAILED = 'IMAGE_FAILED';\r\nexport const ADD_IMAGE = 'ADD_IMAGE';\r\n// image fetching action types","import React, {Component} from 'react';\r\nimport Footer from './FooterComponent';\r\nimport { fetchQuotes, fetchLoadingTest,\r\n         fetchImage, fetchImageLoadingTest } from '../redux/ActionCreators'\r\nimport { connect } from 'react-redux';\r\nimport { FadeTransform, Loop, Fade } from 'react-animation-components';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      quotes: state.quotes,\r\n      image: state.image\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchQuotes: () => {dispatch(fetchQuotes())},\r\n  fetchLoadingTest: () => {dispatch(fetchLoadingTest())},\r\n  fetchImage: () => {dispatch(fetchImage())},\r\n  fetchImageLoadingTest: () => {dispatch(fetchImageLoadingTest())}\r\n});\r\n\r\n//CONTENT COMPONENT\r\nclass RenderContent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.newQuote = this.newQuote.bind(this);\r\n  }\r\n\r\n  newQuote() {\r\n  //this.props.fetchLoadingTest(); LOADING fetchLoadingTest\r\n  this.props.fetchQuotes();\r\n  /* this.props.fetchImage();\r\n  this.props.setBackground(); */\r\n  }\r\n  render(){\r\n    if(this.props.quotesLoading){\r\n      return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fas fa-cog fa-spin fa-3x fa-fw text-primary\"></span>\r\n            <h5><strong>Loading Quote. . .</strong></h5>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    /* if(this.props.imageLoading){\r\n      return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fas fa-cog fa-spin fa-3x fa-fw text-primary\"></span>\r\n            <h5><strong>Loading Image. . .</strong></h5>\r\n        </div>\r\n      );\r\n    } */\r\n\r\n    else if (this.props.quotesErrMess) {\r\n            return(\r\n                <div className=\"col-12\">\r\n                    <span className=\"fas fa-times fa-3x fa-fw text-primary\"></span>\r\n                    <h5><strong>{this.props.quotesErrMess}</strong></h5>\r\n                    <button onClick = {this.newQuote}>NEW QUOTE</button>\r\n                </div>\r\n                );\r\n               }\r\n    else {\r\n      const twitterUrl = \"https://twitter.com/intent/tweet?text=\" + this.props.quote +\r\n      \" \" + this.props.author + \"&hashtags=quotes\";\r\n      const tumblrUrl = \"https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes&caption=\" + \r\n      this.props.author + \"&content=\" + this.props.quote + \"&canonicalUrl=https://www.tumblr.com/buttons&shareSource=tumblr_share_button\"\r\n\r\n\r\n      return(\r\n        <div>\r\n            <FadeTransform in transformProps=\r\n            {{ enterTransform: 'translateX(0px)',\r\n             exitTransform: 'translateX(-100px)' }}>\r\n          <header>\r\n            <h1>{this.props.quote}</h1>\r\n            <p>-{this.props.author}</p>\r\n          </header>\r\n          </FadeTransform>\r\n          <FadeTransform in transformProps=\r\n            {{ enterTransform: 'translateX(0px)',\r\n             exitTransform: 'translateX(100px)' }}>\r\n          <button onClick = {this.props.fetchQuotes}>NEW QUOTE</button>\r\n          <div><br /></div>\r\n          <footer>\r\n            <ul className=\"icons\">\r\n              <li><a target = \"_blank\" \r\n              href= {twitterUrl}\r\n               className=\"icon brands fa-twitter\">Twitter</a></li>\r\n              <li><a target = \"_blank\" href={tumblrUrl} className=\"icon brands fa-tumblr\">Facebook</a></li>\r\n            </ul>\r\n              <Loop in>\r\n                <Fade>\r\n                  <p>Share this quote!</p>\r\n                </Fade>\r\n              </Loop>\r\n          </footer>\r\n          <Footer />\r\n          </FadeTransform>\r\n          </div>\r\n          \r\n      );\r\n    }\r\n  }\r\n}\r\n//CONTENT COMPONENT\r\n\r\n\r\n//MAIN BODY COMPONENT\r\nclass Body extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setBackground = this.setBackground.bind(this);\r\n    this.fetchImage = this.fetchImage.bind(this);\r\n    /* this.changeData = this.changeData.bind(this); */\r\n    this.state = {\r\n      imageLoading: true, \r\n      image:''\r\n    }\r\n  }\r\n  setBackground() {\r\n  const url = \"url('\" + this.state.image + \"')\"\r\n   document.body.style.backgroundImage = url;\r\n }\r\n  fetchImage(){\r\n  return fetch(`https://source.unsplash.com/random`)\r\n  .then(response => {\r\n    if (response.ok) {\r\n        return response;\r\n    }\r\n    else {\r\n        var error = new Error('Error ' + response.status + ': ' +\r\n         response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n},\r\nerror => {\r\n    var errmess = new Error(error.message);\r\n    throw errmess;\r\n}) \r\n    .then(response => response.url)\r\n    .then(url => this.setState({image: url}))\r\n    .then(()=> this.setBackground())\r\n    /* .then(()=> this.setState({imageLoading: false})) */\r\n    .catch(error => console.log(error.message))\r\n }\r\n\r\n  /* async changeData(){\r\n  this.setState({imageLoading: true});\r\n  \r\n  console.log(this.state)\r\n  const image = await this.setBackground();\r\n  const quotes = await this.props.fetchQuotes(); \r\n  \r\n }\r\n */\r\n componentDidMount() {\r\n  /* this.props.fetchLoadingTest(); */\r\n  this.fetchImage();\r\n  this.props.fetchQuotes(); \r\n}\r\n\r\n    render(){\r\n      const quote = this.props.quotes.quotes.content;\r\n      const author = this.props.quotes.quotes.author;\r\n        return (\r\n\t\t\t<section id=\"main\">\r\n      <RenderContent quote = {quote} author = {author}\r\n      fetchQuotes = {this.props.fetchQuotes}\r\n      fetchImage = {this.props.fetchImage}\r\n      setBackground = {this.setBackground}\r\n      fetchLoadingTest = {this.props.fetchLoadingTest}\r\n      quotesErrMess = {this.props.quotes.quotesErrMess}\r\n      quotesLoading = {this.props.quotes.quotesLoading} \r\n      changeData = {this.changeData}\r\n      imageLoading = {this.state.imageLoading}\r\n      />\r\n      </section>);\r\n      }\r\n}\r\n//MAIN BODY COMPONENT\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body)\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Quotes = (state = {\r\n        quotesLoading: true,\r\n        quotesErrMess: null,\r\n        quotes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_QUOTES:\r\n            return {...state, quotesLoading: false, quotesErrMess: null, quotes: action.payload};\r\n\r\n        case ActionTypes.QUOTES_LOADING:\r\n            return {...state, quotesLoading: true, quotesErrMess: null, quotes: []};\r\n\r\n        case ActionTypes.QUOTES_FAILED:\r\n            return {...state, quotesLoading: false, quotesErrMess: action.payload, quotes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Image = (state = {\r\n        imageLoading: true,\r\n        imageErrMess: null,\r\n        image: \"\"\r\n    }, action) => {\r\n    switch(action.type) {\r\n        \r\n        case ActionTypes.ADD_IMAGE:\r\n            return {...state, imageLoading: false, imageErrMess: null, image: action.payload};\r\n\r\n        case ActionTypes.IMAGE_LOADING:\r\n            return {...state, imageLoading: true, imageErrMess: null, image: \"\"};\r\n\r\n        case ActionTypes.IMAGE_FAILED:\r\n            return {...state, imageLoading: false, imageErrMess: action.payload, image: \"\"};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { Quotes } from './quotesReducer';\r\nimport { Image } from './imageReducer';\r\n\r\nconst ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            quotes: Quotes,\r\n            image: Image\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}\r\nexport const store = ConfigureStore();\r\n","import React from 'react';\nimport './App.css';\nimport Body from './components/BodyComponent';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/configureStore';\n\n\nfunction App() {\n  return (\n  \t<Provider store={store}>\n    <div id=\"wrapper\">\n      <Body />\n    </div>\n    </Provider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}